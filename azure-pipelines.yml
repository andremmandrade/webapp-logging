# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# disabling the push trigger
#trigger:
#- master

trigger:
  branches:
    include:
    - dev
    - master


variables:
- template: default-vars.yml
- template: vars-dev.yml
- template: vars-prod.yml

stages:
    - stage: 'CI'
      displayName: 'CI'
      jobs:
      - job: build
        pool:
          name: $(pool_name)
          vmImage: $(vmImage)
        steps:
        - task: UseDotNet@2
          displayName: 'Use .NET Core sdk 6.0.101'
          inputs:
            version: 6.0.101
        - task: DotNetCoreCLI@2
          displayName: 'dotnet build'
          inputs:
            command: build
            projects: '**/*.csproj'
            arguments: '--framework $(dotNetFramework)'
        - task: DotNetCoreCLI@2
          displayName: 'dotnet publish'
          inputs:
            command: publish
            arguments: '-c Release --no-restore'
            zipAfterPublish: true
            publishWebProjects: true
            
        - task: CmdLine@2
          inputs:
            script: |
              ls '$(System.DefaultWorkingDirectory)'
              
              ls '$(System.DefaultWorkingDirectory)/bin'
              
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)/bin/WebApp'
            artifact: '$(package_name)'
            publishLocation: 'pipeline'
            
#        - task: UniversalPackages@0
#          displayName: 'Universal publish'
#          inputs:
#            command: publish
#            publishDirectory: '$(System.DefaultWorkingDirectory)'
#            vstsFeedPublish: 'e04a8b62-136c-499e-89ee-b1cb86e443fb/f242475f-7098-4d1c-a39e-4f1bae10870b'
#            vstsFeedPackagePublish: '$(package_name)'
#            verbosity: Debug
#            versionOption: patch
#            publishPackageMetadata: true

#    - stage: 'CD'
#      displayName: 'CD'
#      dependsOn: CI
#      condition: succeeded('CI')
#      jobs:
#      - job: deploy
#        pool:
#          name: $(pool_name)
#          vmImage: $(vmImage)
#        steps:
#        - task: UniversalPackages@0
#          displayName: 'Universal download'
#          inputs:
#            vstsFeed: 'e04a8b62-136c-499e-89ee-b1cb86e443fb/f242475f-7098-4d1c-a39e-4f1bae10870b'
#            vstsFeedPackage: '$(package_name)'
#            vstsPackageVersion: '*'
#            verbosity: Debug
#        - task: AzureRmWebAppDeployment@4
#          displayName: 'Azure App Service Deploy: $(app_service_name)'
#          inputs:
#            azureSubscription: 'andreandrade_internal(29eb732c-7f74-4314-82af-336bfd45139d)'
#            appType: webApp
#            WebAppName: '$(app_service_name)'
#            packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'